dev_main_email: "hello@lt.hn"
explorer_domain: "explorer.dev.lthn.network"
# you can leave the rest, but change the values above
explorer_repo: "https://github.com/letheanVPN/block_explorer.git"
explorer_branch: "main"
dev_main_nodes_ips: "{{ groups['explorer'] | map('extract', hostvars, ['ansible_all_ipv4_addresses']) | flatten }}"
certbot_email: "{{ dev_main_email }}"
certbot_domains:
  - "{{ explorer_domain }}"
nginx_listen_ipv6: true
nginx_remove_default_vhost: true
nginx_server_tokens: "off"
nginx_vhosts:
  - listen: "80"
    server_name: "{{ explorer_domain }}"
    return: "301 https://{{ explorer_domain }}$request_uri"
    filename: "{{ explorer_domain }}.80.conf"
  - listen: "443 ssl http2"
    server_name: "{{ explorer_domain }}"
    root: "/var/www/{{ explorer_domain }}/public_html"
    index: "index.html"
    state: "present"
    filename: "{{ explorer_domain }}.conf"
    extra_parameters: |
      location ~ ^/(.*) {
        proxy_pass http://127.0.0.1:8008/$1$is_args$args;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        #wss requires nginx 1.4
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

      }
      ssl_certificate     /etc/letsencrypt/live/{{ explorer_domain }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ explorer_domain }}/privkey.pem;
      ssl_protocols       TLSv1.2;
      ssl_ciphers         "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

postgres_users_no_log: false

postgresql_global_config_options:
  - option: unix_socket_directories
    value: '{{ postgresql_unix_socket_directories | join(",") }}'
  - option: log_directory
    value: 'log'

postgresql_hba_entries:
  - { type: local, database: all, user: postgres, auth_method: peer }
  - { type: local, database: all, user: all, auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: password }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: password }

postgresql_databases:
  - name: lthn-explorer # required; the rest are optional

postgresql_users:
  - name: lthn-explorer #required; the rest are optional

